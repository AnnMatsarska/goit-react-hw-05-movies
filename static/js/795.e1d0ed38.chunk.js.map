{"version":3,"file":"static/js/795.e1d0ed38.chunk.js","mappings":"kQAEaA,EAAQC,EAAAA,GAAAA,GAAH,kH,kBCAZC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFV,cAC3BI,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,iBCFnBC,EAAOP,EAAAA,GAAAA,GAAH,wJAUJQ,EAAMR,EAAAA,GAAAA,IAAH,0CAIHS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,yCAIVD,EAAQC,EAAAA,GAAAA,GAAH,0Q,6ECjBLW,EAAY,SAAC,GAA2C,IAAD,IAAxCC,MAASC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,MAC9CC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAAYS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAAhD,WACE,SAACR,EAAD,CACEa,IAAKP,EALU,mCAKqBA,EAAcQ,EAClDC,IAAKR,EACLS,QAAQ,UAEV,SAAC,EAAD,UAAQT,QAIf,ECjBYU,EAAOzB,EAAAA,GAAAA,GAAH,wICAJ0B,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE/B,OADAC,QAAQC,IAAIF,IAEV,SAACF,EAAD,UACGE,EAAOG,KAAI,SAAAlB,GACV,OAAO,SAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMC,GAC9B,KAGN,ECXYkB,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,wBAAKA,GACb,EC6CD,EApCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRX,QAAQC,IAAI,mBACZ,IAAMW,EAAiB,mCAAG,oGAEtBJ,GAAa,GAFS,SAGHjC,IAHG,OAGhBG,EAHgB,OAItB4B,EAAU5B,EAAKmC,SAJO,gDAMtBH,EAAS,KAAMN,SANO,yBAQtBI,GAAa,GARS,4EAAH,qDAWvBI,IACAZ,QAAQC,IAAI,gBACb,GAAE,KAGD,+BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC9B,EAAD,UAAO,mBACNoC,IAAa,SAACO,EAAA,EAAD,IACbL,IAAS,SAACN,EAAD,CAAOC,QAAQ,+BACN,IAAlBL,EAAOgB,SAAgB,SAACjB,EAAD,CAAgBC,OAAQA,UAKzD,C","sources":["pages/Home/Home.styled.js","services/movie-api.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","components/Error/Error.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 320px;\n  margin-bottom: 22px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '1e380c5eeff8711da34762a498fc6761';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: calc((100% - 72px) / 4);\n  transition: transform 300ms;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Img = styled.img`\n  height: 385px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n`;\n\nexport const Title = styled.h2`\n  display: inline-block;\n  border-radius: 0 0 8px 8px;\n  background-color: rgb(239, 187, 64);\n\n  width: 249px;\n  height: 56px;\n  padding-top: 10px;\n  padding-left: 8px;\n\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 18px;\n`;\n","import { Item, Img, Title, StyledLink } from './MovieCard.styled';\nimport { useLocation } from 'react-router-dom';\nimport noImage from '../../images/No-Image.svg.png';\n\nexport const MovieCard = ({ movie: { id, poster_path, title } }) => {\n  const location = useLocation();\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    <Item>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <Img\n          src={poster_path ? IMAGE_BASE_URL + poster_path : noImage}\n          alt={title}\n          loading=\"lazy\"\n        />\n        <Title>{title}</Title>\n      </StyledLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 24px;\n  justify-content: center;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n","import { MovieCard } from '../MovieCard/MovieCard';\nimport { List } from './TrendingMovies.styled';\nexport const TrendingMovies = ({ movies }) => {\n  console.log(movies);\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MovieCard key={movie.id} movie={movie} />;\n      })}\n    </List>\n  );\n};\n","export const Error = ({ message }) => {\n  return <h1>{message}</h1>;\n};\n","import { Container, Section } from 'components/App/App.styled';\nimport { Title } from './Home.styled';\n\nimport { useState, useEffect } from 'react';\n\nimport { fetchTrendingMovies } from 'services/movie-api';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { TrendingMovies } from 'components/TrendingMovies/TrendingMovies';\nimport { Error } from 'components/Error/Error';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    console.log('start rendering');\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingMovies();\n    console.log('end rendering');\n  }, []);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <Title>Trending today</Title>\n          {isLoading && <Loader />}\n          {error && <Error message=\"Opps. something went wrong\" />}\n          {movies.length !== 0 && <TrendingMovies movies={movies} />}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["Title","styled","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","Item","Img","StyledLink","Link","MovieCard","movie","id","poster_path","title","location","useLocation","to","state","from","src","noImage","alt","loading","List","TrendingMovies","movies","console","log","map","Error","message","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getTrendingMovies","results","Loader","length"],"sourceRoot":""}