{"version":3,"file":"static/js/339.c751b958.chunk.js","mappings":"+OAEaA,E,OAAQC,GAAAA,GAAH,kH,kBCAZC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFV,cAC3BI,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qD,kBCLnBC,EAAY,SAAC,GAAuC,IAAD,IAApCC,MAASC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,MAEhD,OACE,iCACE,gBACEC,IAAKF,EAJY,mCAImBA,EAAc,GAClDG,IAAKF,EACLG,QAAQ,UAEV,wBAAKH,MAGV,ECXYI,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC/B,OACE,wBACGA,EAAOC,KAAI,SAAAR,GACV,OAAO,SAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMS,GAC9B,KAGN,ECTYC,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,wBAAKA,GACb,EC6CD,EApCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,mBACZ,IAAMC,EAAiB,mCAAG,oGAEtBN,GAAa,GAFS,SAGHpB,IAHG,OAGhBG,EAHgB,OAItBe,EAAUf,EAAKwB,SAJO,gDAMtBL,EAAS,KAAMN,SANO,yBAQtBI,GAAa,GARS,4EAAH,qDAWvBM,IACAF,QAAQC,IAAI,gBACb,GAAE,KAGD,+BACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC7B,EAAD,UAAO,mBACNuB,IAAa,SAACS,EAAA,EAAD,IACbP,IAAS,SAACN,EAAD,CAAOC,QAAQ,+BACN,IAAlBJ,EAAOiB,SAAgB,SAAClB,EAAD,CAAgBC,OAAQA,UAKzD,C","sources":["pages/Home/Home.styled.js","services/movie-api.js","components/MovieCard/MovieCard.jsx","components/TrendingMovies/TrendingMovies.jsx","components/Error/Error.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 320px;\n  margin-bottom: 22px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '1e380c5eeff8711da34762a498fc6761';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","export const MovieCard = ({ movie: { poster_path, title } }) => {\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    <>\n      <img\n        src={poster_path ? IMAGE_BASE_URL + poster_path : ''}\n        alt={title}\n        loading=\"lazy\"\n      />\n      <h2>{title}</h2>\n    </>\n  );\n};\n","import { MovieCard } from '../MovieCard/MovieCard';\nexport const TrendingMovies = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => {\n        return <MovieCard key={movie.id} movie={movie} />;\n      })}\n    </ul>\n  );\n};\n","export const Error = ({ message }) => {\n  return <h1>{message}</h1>;\n};\n","import { Container, Section } from 'components/App/App.styled';\nimport { Title } from './Home.styled';\n\nimport { useState, useEffect } from 'react';\n\nimport { fetchTrendingMovies } from 'services/movie-api';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { TrendingMovies } from 'components/TrendingMovies/TrendingMovies';\nimport { Error } from 'components/Error/Error';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    console.log('start rendering');\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingMovies();\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingMovies();\n    console.log('end rendering');\n  }, []);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <Title>Trending today</Title>\n          {isLoading && <Loader />}\n          {error && <Error message=\"Opps. something went wrong\" />}\n          {movies.length !== 0 && <TrendingMovies movies={movies} />}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["Title","styled","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","MovieCard","movie","poster_path","title","src","alt","loading","TrendingMovies","movies","map","id","Error","message","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","console","log","getTrendingMovies","results","Loader","length"],"sourceRoot":""}