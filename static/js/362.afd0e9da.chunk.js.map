{"version":3,"file":"static/js/362.afd0e9da.chunk.js","mappings":"oLAAaA,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,wBAAKA,GACb,C,wJCAYC,E,QAAOC,GAAAA,GAAH,2G,SCAJC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,OAAS,EACdD,EAAQE,KAAI,SAAAC,GAAM,OAChB,UAACN,EAAD,YACE,0BACE,uBAAG,YAAW,IAAEM,EAAOC,WAEzB,mBACA,0BACE,uBAAG,aAAY,IAAED,EAAOE,aANjBF,EAAOG,GADF,IAWlB,uDAGT,E,8BC8BD,EAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOP,EAAP,KAAgBQ,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBN,GAAa,GAFO,UAGIO,EAAAA,EAAAA,IAAmBJ,GAHvB,OAGdK,EAHc,OAKpBV,EAAWU,EAAUC,SALD,gDAOpBP,EAAS,KAAMhB,SAPK,yBASpBc,GAAa,GATO,4EAAH,qDAYrBM,GACD,GAAE,CAACH,KAGF,+BACE,SAAC,IAAD,WACE,UAAC,IAAD,WACGF,IACC,SAAChB,EAAA,EAAD,CACEC,QAAO,+EAGVa,IAAa,SAACW,EAAA,EAAD,IACD,IAAZpB,IAAiB,SAACD,EAAD,CAAaC,QAASA,UAKjD,C,mMC9CKqB,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFV,cAC3BI,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,qDAOnBC,EAAkB,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAqB,EAArB,SACTL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC+BO,EAD/B,iBAC6CC,IAFpC,cAC1BJ,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBI,EAAe,mCAAG,WAAMxB,GAAN,uFACNkB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAhB,EADA,oBACce,IAFR,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMlB,GAAN,uFACNW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAT,EADA,4BAC2BQ,IAFrB,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfT,EAAkB,mCAAG,WAAMJ,GAAN,uFACTW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAT,EADA,4BAC2BQ,IAFlB,cAC1BI,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,qD","sources":["components/Error/Error.jsx","components/Reviews/Reviews.styled.js","components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/movie-api.js"],"sourcesContent":["export const Error = ({ message }) => {\n  return <h1>{message}</h1>;\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ccc;\n`;\n","import { Item } from './Reviews.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.length > 0\n        ? reviews.map(review => (\n            <Item key={review.id}>\n              <p>\n                <b>Author:</b> {review.author}\n              </p>\n              <br />\n              <p>\n                <b>Content:</b> {review.content}\n              </p>\n            </Item>\n          ))\n        : 'Unfortunately, there are no reviews for this movie.'}\n    </ul>\n  );\n};\n","import { Container, Section } from 'components/App/App.styled';\n\nimport { Error } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewsList } from './ReviewsList';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/movie-api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const movieById = await fetchMoviesReviews(movieId);\n\n        setReviews(movieById.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          {error && (\n            <Error\n              message={`Sorry, but the searched information was not found. Please try again later!`}\n            />\n          )}\n          {isLoading && <Loader />}\n          {reviews !== 0 && <ReviewsList reviews={reviews} />}\n        </Container>\n      </Section>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '1e380c5eeff8711da34762a498fc6761';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["Error","message","Item","styled","ReviewsList","reviews","length","map","review","author","content","id","useState","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","fetchMoviesReviews","movieById","results","Loader","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","fetchMoviesByQuery","query","page","fetchMoviesById","fetchMoviesCast"],"sourceRoot":""}